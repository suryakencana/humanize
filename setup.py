#!/usr/bin/env python
# -*- coding: utf-8 -*-

"""Setup script for humanize."""
from contextlib import contextmanager
import io

from setuptools.command.sdist import sdist as _sdist
from setuptools.command.test import test as _test
from setuptools import setup, find_packages

version = '0.5.1'

# some trove classifiers:

VERSION = __import__('humanize').__version__
VERSION_FILE = 'humanize/_version.py'
VERSION_TPL = ("# This version file is autogenerated from Git data.\n"
               "def get_version():\n"
               "    return '{version}'\n")


@contextmanager
def static_version_file():
    with open(VERSION_FILE) as fp:
        previous = fp.read()
    with open(VERSION_FILE, 'w') as fp:
        fp.write(VERSION_TPL.format(version=VERSION))
    print('updated {} with version {}'.format(VERSION_FILE, VERSION))
    yield
    with open(VERSION_FILE, 'w') as fp:
        fp.write(previous)
    print('replaced original {}'.format(VERSION_FILE))


class sdist(_sdist):
    def run(self):
        with static_version_file():
            return _sdist.run(self)


class test(_test):
    def run(self):
        print('please run tox instead')

setup(
    name='humanize',
    version=VERSION,
    description="python humanize utilities",
    long_description=io.open('README.rst', 'r', encoding="UTF-8").read(),
    # Get strings from http://pypi.python.org/pypi?%3Aaction=list_classifiers
    classifiers=[
        'Development Status :: 4 - Beta',
        'Intended Audience :: Developers',
        'License :: OSI Approved :: MIT License',
        'Operating System :: POSIX',
        'Programming Language :: Python :: 3',
        'Programming Language :: Python',
    ],
    keywords='humanize time size',
    author='Jason Moiron',
    author_email='jmoiron@jmoiron.net',

    url='http://github.com/jmoiron/humanize',
    license='MIT',
    packages=find_packages(exclude=['ez_setup', 'examples', 'tests']),
    include_package_data=True,
    zip_safe=False,
    cmdclass={'sdist': sdist,
              'test': test},
    test_suite="tests",
    tests_require=['mock'],
    install_requires=[
        # -*- Extra requirements: -*-
    ],
    entry_points="""
    # -*- Entry points: -*-
    """,
    message_extractors={"humanize": [
        ("**.py", "python", None),
        ('**.html', 'jinja2', {'input_encoding': 'utf-8'}),
        ('**.jinja2', 'jinja2', {'input_encoding': 'utf-8'}),
        ('static/**', 'ignore', None)
    ]
    }
)
